{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Student\\\\Documents\\\\react project\\\\react_trail projects\\\\src\\\\components\\\\Slider\\\\Slider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Slider.css';\nimport BtnSlider from './BtnSlider';\nimport dataSlider from './dataSlider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Slider(props) {\n  _s();\n\n  const [silderindex, setsliderindex] = useState(1);\n\n  const nextslide = () => {\n    if (silderindex !== dataSlider.length) {\n      setsliderindex(silderindex + 1);\n    } else if (silderindex === dataSlider.length) {\n      setsliderindex(1);\n    }\n  };\n\n  const prevslide = () => {\n    if (silderindex !== 1) {\n      setsliderindex(silderindex - 1);\n    } else if (silderindex === 1) {\n      setsliderindex(dataSlider.length);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.onchange ? \"h\" : \"container-slider \",\n    children: [dataSlider.map((obj, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: silderindex === index + 1 ? \"slide active-anim\" : \"slide\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + `/Imgs/img${index + 1}.jpg`,\n          alt: \"damn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, obj.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(BtnSlider, {\n      move: nextslide,\n      direction: \"next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BtnSlider, {\n      move: prevslide,\n      direction: \"prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-dots\",\n      children: [\"                \", Array.from({\n        length: 5\n      }).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onclick: () => movepho(index + 1),\n        className: silderindex === index + 1 ? \"dot active\" : \"dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Slider, \"WeLTuvFRrP6FZdNhqfBv1wCQCYA=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/Student/Documents/react project/react_trail projects/src/components/Slider/Slider.js"],"names":["React","useState","BtnSlider","dataSlider","Slider","props","silderindex","setsliderindex","nextslide","length","prevslide","onchange","map","obj","index","process","env","PUBLIC_URL","id","Array","from","item","movepho"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMO,SAAS,GAAG,MAAM;AACpB,QAAIF,WAAW,KAAKH,UAAU,CAACM,MAA/B,EAAuC;AACnCF,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACH,KAFD,MAGK,IAAIA,WAAW,KAAKH,UAAU,CAACM,MAA/B,EAAuC;AACxCF,MAAAA,cAAc,CAAC,CAAD,CAAd;AACH;AACJ,GAPD;;AAQA,QAAMG,SAAS,GAAG,MAAM;AACpB,QAAIJ,WAAW,KAAK,CAApB,EAAuB;AACnBC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACH,KAFD,MAGK,IAAIA,WAAW,KAAK,CAApB,EAAuB;AACxBC,MAAAA,cAAc,CAACJ,UAAU,CAACM,MAAZ,CAAd;AACH;AACJ,GAPD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAEJ,KAAK,CAACM,QAAN,GAAiB,GAAjB,GAAuB,mBAAvC;AAAA,eACKR,UAAU,CAACS,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,0BACI;AAAkB,QAAA,SAAS,EAAER,WAAW,KAAKQ,KAAK,GAAG,CAAxB,GAA4B,mBAA5B,GAAkD,OAA/E;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAA0B,YAAWH,KAAK,GAAG,CAAE,MAAzD;AAAgE,UAAA,GAAG,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUD,GAAG,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPA,CADL,eASI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEV,SAAjB;AAA4B,MAAA,SAAS,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAEE,SAAjB;AAA4B,MAAA,SAAS,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,qCACIS,KAAK,CAACC,IAAN,CAAW;AAAEX,QAAAA,MAAM,EAAE;AAAV,OAAX,EAA0BG,GAA1B,CAA8B,CAACS,IAAD,EAAOP,KAAP,kBAC1B;AAAK,QAAA,OAAO,EAAE,MAAMQ,OAAO,CAACR,KAAK,GAAG,CAAT,CAA3B;AAAwC,QAAA,SAAS,EAAER,WAAW,KAAMQ,KAAK,GAAG,CAAzB,GAA8B,YAA9B,GAA6C;AAAhG;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAzCQV,M;;KAAAA,M;AA2CT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport './Slider.css'\nimport BtnSlider from './BtnSlider'\nimport dataSlider from './dataSlider';\n\n\nfunction Slider(props) {\n\n    const [silderindex, setsliderindex] = useState(1);\n\n    const nextslide = () => {\n        if (silderindex !== dataSlider.length) {\n            setsliderindex(silderindex + 1)\n        }\n        else if (silderindex === dataSlider.length) {\n            setsliderindex(1)\n        }\n    }\n    const prevslide = () => {\n        if (silderindex !== 1) {\n            setsliderindex(silderindex - 1)\n        }\n        else if (silderindex === 1) {\n            setsliderindex(dataSlider.length)\n        }\n    }\n\n\n\n    return (\n        <div className={props.onchange ? \"h\" : \"container-slider \"}>\n            {dataSlider.map((obj, index) => {\n                return (\n                    <div key={obj.id} className={silderindex === index + 1 ? \"slide active-anim\" : \"slide\"}>\n                        <img src={process.env.PUBLIC_URL + `/Imgs/img${index + 1}.jpg`} alt=\"damn\" />\n                    </div>\n                )\n\n            })}\n            <BtnSlider move={nextslide} direction={\"next\"} />\n            <BtnSlider move={prevslide} direction={\"prev\"} />\n            <div className=\"container-dots\">                {\n                Array.from({ length: 5 }).map((item, index) => (\n                    <div onclick={() => movepho(index + 1)} className={silderindex === (index + 1) ? \"dot active\" : \"dot\"}></div>))\n            }</div>\n        </div >\n    );\n}\n\nexport default Slider;"]},"metadata":{},"sourceType":"module"}